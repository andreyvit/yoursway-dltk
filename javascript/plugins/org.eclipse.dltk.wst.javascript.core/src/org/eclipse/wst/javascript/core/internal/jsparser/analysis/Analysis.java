/*******************************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.wst.javascript.core.internal.jsparser.analysis;



/* This file was generated by SableCC (http://www.sablecc.org/). */

import org.eclipse.wst.javascript.core.internal.jsparser.node.EOF;
import org.eclipse.wst.javascript.core.internal.jsparser.node.Node;
import org.eclipse.wst.javascript.core.internal.jsparser.node.Switch;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TBlank;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TCommenttok;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TDecimalLiteral;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TErrorChar;
import org.eclipse.wst.javascript.core.internal.jsparser.node.THexIntegerLiteral;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TIdentifier;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TPunctuator1;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TRegularExpressionLiteral;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TStringLiteral;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TUnterminatedComment;
import org.eclipse.wst.javascript.core.internal.jsparser.node.TUnterminatedStringLiteral;

public interface Analysis extends Switch {

	void caseEOF(EOF node);

	void caseTBlank(TBlank node);

	void caseTCommenttok(TCommenttok node);

	void caseTDecimalLiteral(TDecimalLiteral node);

	void caseTErrorChar(TErrorChar node);

	void caseTHexIntegerLiteral(THexIntegerLiteral node);

	void caseTIdentifier(TIdentifier node);

	void caseTPunctuator1(TPunctuator1 node);

	void caseTRegularExpressionLiteral(TRegularExpressionLiteral node);

	void caseTStringLiteral(TStringLiteral node);

	void caseTUnterminatedComment(TUnterminatedComment node);

	void caseTUnterminatedStringLiteral(TUnterminatedStringLiteral node);

	Object getIn(Node node);

	Object getOut(Node node);

	void setIn(Node node, Object in);

	void setOut(Node node, Object out);
}